'use client';
import { useEffect, useState } from 'react'; import AdminShell from '@/components/admin/AdminShell'; import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'; import { Button } from '@/components/ui/button'; import { Input } from '@/components/ui/input'; import { z } from 'zod'; import { useForm } from 'react-hook-form'; import { zodResolver } from '@hookform/resolvers/zod';
const ProjSchema=z.object({ developerId:z.string().min(1), name:z.string().min(1), city:z.string().min(1), district:z.string().min(1), lat:z.coerce.number(), lng:z.coerce.number(), deliveryDate:z.coerce.number().optional() }); type Dev={ id:string; name:string }; type Proj=z.infer<typeof ProjSchema>&{ id?:string };
export default function Page(){ const [items,setItems]=useState<any[]>([]); const [devs,setDevs]=useState<Dev[]>([]); const form=useForm<Proj>({ resolver:zodResolver(ProjSchema), defaultValues:{ name:'', city:'', district:'' } });
  async function load(){ const [p,d]=await Promise.all([fetch('/api/projects').then(r=>r.json()), fetch('/api/developers').then(r=>r.json())]); setItems(p); setDevs(d); } useEffect(()=>{ load(); },[]);
  async function onSubmit(values:Proj){ await fetch('/api/projects',{ method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(values)}); form.reset({ name:'', city:'', district:'' } as any); await load(); }
  async function remove(id:string){ await fetch(`/api/projects/${id}`,{ method:'DELETE' }); await load(); }
  return (<AdminShell><div className="grid grid-cols-1 md:grid-cols-2 gap-6">
    <Card><CardHeader><CardTitle>Add Project</CardTitle></CardHeader><CardContent className="space-y-3"><form onSubmit={form.handleSubmit(onSubmit)} className="grid grid-cols-2 gap-3">
      <div className="col-span-2"><select className="w-full border border-amber-200 rounded px-3 py-2 text-sm" value={form.getValues('developerId')||''} onChange={(e)=>form.setValue('developerId', e.target.value)}><option value="">Select developer</option>{devs.map(d=>(<option key={d.id} value={d.id}>{d.name}</option>))}</select></div>
      <Input placeholder="Name" {...form.register('name')} /><Input placeholder="City" {...form.register('city')} /><Input placeholder="District" {...form.register('district')} /><Input placeholder="Latitude" {...form.register('lat')} /><Input placeholder="Longitude" {...form.register('lng')} /><Input placeholder="Delivery Year (optional)" {...form.register('deliveryDate')} />
      <div className="col-span-2"><Button type="submit">Add Project</Button></div></form></CardContent></Card>
    <Card><CardHeader><CardTitle>All Projects</CardTitle></CardHeader><CardContent><div className="divide-y">{items.map(p=>(<div key={p.id} className="py-3 grid grid-cols-6 items-center gap-2"><div className="col-span-2 font-medium">{p.name}</div><div className="text-sm">{p.city}</div><div className="text-sm">{p.district}</div><div className="text-xs text-neutral-600">{p.lat}, {p.lng}</div><div className="text-right"><Button variant="destructive" onClick={()=>remove(p.id)}>Delete</Button></div></div>))}</div></CardContent></Card>
  </div></AdminShell>); }
